[{"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/index.tsx":"1","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/reportWebVitals.ts":"2","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/App.tsx":"3","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/User/Login.tsx":"4","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/User/Move.tsx":"5","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/User/Register.tsx":"6","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/Profile.tsx":"7","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/Home.tsx":"8","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/Chat.tsx":"9","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Ranking/Ranking.tsx":"10","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForProfile/FetchContribute.tsx":"11","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/Status.tsx":"12","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/ReceivedLog.tsx":"13","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/SendContribute.tsx":"14","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForProfile/FetchProfile.tsx":"15","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/SentLog.tsx":"16","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToChat.tsx":"17","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToProfile.tsx":"18","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToLogin.tsx":"19","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToHome.tsx":"20","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToRanking.tsx":"21","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/SendChat.tsx":"22","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/ChatList.tsx":"23","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Ranking/componentsForRanking/Receiver.tsx":"24","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Ranking/componentsForRanking/Server.tsx":"25","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForProfile/EditProfile.tsx":"26","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/DeleteLog.tsx":"27","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/DeleteChat.tsx":"28","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/EditChat.tsx":"29"},{"size":602,"mtime":1668313029647,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1667663342615,"results":"32","hashOfConfig":"31"},{"size":967,"mtime":1669103770036,"results":"33","hashOfConfig":"31"},{"size":4277,"mtime":1669110047016,"results":"34","hashOfConfig":"31"},{"size":437,"mtime":1668593426299,"results":"35","hashOfConfig":"31"},{"size":4787,"mtime":1669098851176,"results":"36","hashOfConfig":"31"},{"size":873,"mtime":1669108386356,"results":"37","hashOfConfig":"31"},{"size":1347,"mtime":1669101285716,"results":"38","hashOfConfig":"31"},{"size":1812,"mtime":1669099108396,"results":"39","hashOfConfig":"31"},{"size":1082,"mtime":1669102351516,"results":"40","hashOfConfig":"31"},{"size":3053,"mtime":1669107124146,"results":"41","hashOfConfig":"31"},{"size":1413,"mtime":1668989174638,"results":"42","hashOfConfig":"31"},{"size":2704,"mtime":1669107833236,"results":"43","hashOfConfig":"31"},{"size":4276,"mtime":1669100527936,"results":"44","hashOfConfig":"31"},{"size":2953,"mtime":1669112984022,"results":"45","hashOfConfig":"31"},{"size":3098,"mtime":1669107849946,"results":"46","hashOfConfig":"31"},{"size":651,"mtime":1669101227336,"results":"47","hashOfConfig":"31"},{"size":705,"mtime":1669107005406,"results":"48","hashOfConfig":"31"},{"size":556,"mtime":1669110062086,"results":"49","hashOfConfig":"31"},{"size":659,"mtime":1669098728096,"results":"50","hashOfConfig":"31"},{"size":686,"mtime":1669098798886,"results":"51","hashOfConfig":"31"},{"size":1828,"mtime":1669091401226,"results":"52","hashOfConfig":"31"},{"size":3319,"mtime":1669106939506,"results":"53","hashOfConfig":"31"},{"size":2102,"mtime":1669106934816,"results":"54","hashOfConfig":"31"},{"size":1932,"mtime":1669106935836,"results":"55","hashOfConfig":"31"},{"size":3242,"mtime":1669092125696,"results":"56","hashOfConfig":"31"},{"size":894,"mtime":1668997623378,"results":"57","hashOfConfig":"31"},{"size":892,"mtime":1669038528488,"results":"58","hashOfConfig":"31"},{"size":2052,"mtime":1669091268226,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fl5dxi",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/index.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/reportWebVitals.ts",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/App.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/User/Login.tsx",["162"],[],"import React from \"react\";\r\nimport { useState, useCallback,useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"../../css/User.css\"\r\n\r\nconst Login : React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const blockBrowserBack = useCallback(() => {\r\n    window.history.go(1)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n    // 直前の履歴に現在のページを追加\r\n    window.history.pushState(null, '', window.location.href)\r\n\r\n    // 直前の履歴と現在のページのループ\r\n    window.addEventListener('popstate', blockBrowserBack)\r\n\r\n    // クリーンアップは忘れない\r\n    return () => {\r\n        window.removeEventListener('popstate', blockBrowserBack)\r\n    }\r\n    }, [blockBrowserBack])\r\n\r\n    //name, password\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    //function for onChange\r\n    const handleChangeName = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(e.target.value)\r\n    }\r\n    const handleChangePassword = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    //function for onSubmit\r\n    const onClick = async(e:React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (!username) {\r\n          alert(\"ユーザー名を入力してください\");\r\n          return;\r\n        }\r\n    //@ts-ignore\r\n        if ([...username].length > 50) {\r\n          alert(\"ユーザー名は５０文字未満にしてください\");\r\n          return;\r\n        }\r\n        if (!password) {\r\n            alert(\"パスワードを入力してください\");\r\n            return;\r\n          }\r\n    //@ts-ignore\r\n        if ([...password].length > 50 || [...password].length < 6) {\r\n            alert(\"パスワードは６文字以上かつ５０文字未満にしてください\");\r\n            return;\r\n        }\r\n    \r\n        //POST\r\n        try {\r\n          const result = await fetch(\"http://localhost:8000/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              username: username,\r\n              password: password,\r\n            }),\r\n          });\r\n          \r\n          if (result.status === 406) {\r\n            alert(\"ユーザー名かパスワードが間違っています\")\r\n            setPassword(\"\");\r\n            return;\r\n          }\r\n          else if (!result.ok) {\r\n            throw Error(`Failed to create user: ${result.status}`);\r\n          }\r\n\r\n          setUsername(\"\");\r\n          setPassword(\"\");\r\n          history.replace({\r\n            pathname:\"/individual/\" + username,\r\n            state:{check:\"ok\"}\r\n        })\r\n\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n    }\r\n\r\n    //go to register\r\n    const onClickForRegister = (e:React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n      history.push(\"/register\")\r\n  }\r\n\r\n    //UI返却\r\n    return(\r\n        <div className = \"user-component\">\r\n          <div className=\"user-div\">\r\n            <label className=\"user-label\">ユーザー名</label>\r\n                <input \r\n                  className = \"user-input\"\r\n                  placeholder = \"ユーザー名を入力してください\"\r\n                  type = \"text\"\r\n                  value = {username}\r\n                  onChange = {handleChangeName}/>\r\n          </div>\r\n          <div className=\"user-div\">\r\n            <label className = \"user-label\">パスワード</label>\r\n                <input\r\n                  className = \"user-input\"\r\n                  placeholder = \"パスワードを入力してください\"\r\n                  type = \"password\"\r\n                  value = {password}\r\n                  onChange = {handleChangePassword}/>      \r\n          </div>\r\n          <div className=\"user-div\">\r\n            <button \r\n               className = \"user-buttonForLogin\"\r\n               onClick={(e) => onClick(e)}>Login</button>       \r\n          </div>  \r\n          <div className=\"user-div\">\r\n            <button\r\n              className=\"user-buttonForRegister\" \r\n              onClick={(e) => onClickForRegister(e)}>新規登録画面へ</button>\r\n          </div>              \r\n        </div>\r\n    )}\r\n\r\nexport default Login","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/User/Move.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/User/Register.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/Profile.tsx",["163"],[],"import React, {useEffect} from \"react\";\r\nimport {useLocation, useHistory, useParams} from \"react-router-dom\";\r\nimport FetchProfile from \"./componentsForProfile/FetchProfile\"\r\nimport FetchContribute from \"./componentsForProfile/FetchContribute\" \r\nimport \"../../css/Profile.css\"\r\n\r\ntype Props = {\r\n  v:number\r\n}\r\n\r\nconst Profile : () => JSX.Element | any = () => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation<Props>();\r\n    //username取得\r\n    const urlParams = useParams<{username:string}>()\r\n\r\n    if (!history.location.state){\r\n      //prevent from URL\r\n        history.replace('/login')\r\n    }else{\r\n    const query = location.state\r\n    \r\n    return(\r\n      <div>\r\n        <FetchProfile urlParams={urlParams} query={query}/>\r\n        <FetchContribute urlParams={urlParams} query={query}/>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nexport default Profile","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/Home.tsx",["164"],[],"import React, {useEffect} from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Status from \"./componentsForHome/Status\"\r\nimport ReceivedLog from \"./componentsForHome/ReceivedLog\"\r\nimport SentLog from \"./componentsForHome/SentLog\"\r\nimport LinkToChat from \"../Link/LinkToChat\"\r\nimport LinkToRanking from \"../Link/LinkToRanking\";\r\nimport LinkToLogin from \"../Link/LinkToLogin\";\r\nimport LinkToProfile from \"../Link/LinkToProfile\";\r\nimport SendContribute from \"./componentsForHome/SendContribute\"\r\nimport \"../../css/Home.css\"\r\n\r\nconst Home : React.FC = () => {\r\n\r\n    //query parameter取得\r\n    const urlParams = useParams<{username:string}>()\r\n\r\n    //prevent from URL\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      if (!history.location.state) history.replace('/login')\r\n    }, [])\r\n    \r\n    //要素表示\r\n    return(\r\n      <div>\r\n        <div>\r\n          <Status urlParams = {urlParams}/>\r\n          <SendContribute urlParams = {urlParams}/>\r\n          <ReceivedLog urlParams = {urlParams}/>\r\n          <SentLog urlParams = {urlParams}/>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <LinkToProfile/>\r\n            <LinkToChat/>\r\n            <LinkToRanking/>\r\n            <LinkToLogin/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    )\r\n}\r\n\r\nexport default Home","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/Chat.tsx",["165","166"],[],"import React, {useState, useEffect} from \"react\";\r\nimport { useParams, useHistory} from \"react-router-dom\";\r\nimport LinkToHome from \"../Link/LinkToHome\";\r\nimport LinkToLogin from \"../Link/LinkToLogin\";\r\nimport LinkToProfile from \"../Link/LinkToProfile\";\r\nimport LinkToRanking from \"../Link/LinkToRanking\";\r\nimport ChatList from \"./componentsForChat/ChatList\"\r\nimport SendChat from \"./componentsForChat/SendChat\"\r\nimport \"../../css/Chat.css\"\r\n\r\ntype chatLog = {\r\n    id: string,\r\n    username: string,\r\n    textMessage: string\r\n}\r\n\r\nconst Chat : React.FC = () => {\r\n\r\n    //username取得\r\n    const username = useParams<{username:string}>()\r\n\r\n    console.log(username.username)\r\n    \r\n    const [text, setText] = useState<chatLog[]>([])\r\n\r\n    const fetchUrl = \"http://localhost:8000/global/chat\"\r\n    //chat取得\r\n    const fetchChat = async () => {\r\n        try {\r\n          const res = await fetch(fetchUrl);\r\n          if (!res.ok) {\r\n            throw Error(`Failed to fetch users: ${res.status}`);\r\n          }\r\n    \r\n          const message = await res.json();\r\n          setText(message);\r\n          console.log(text)\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    //一度だけ取得\r\n    useEffect (() => {\r\n      fetchChat()\r\n    },[])\r\n\r\n    //prevent from URL\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      if (!history.location.state) history.replace('/login')\r\n    }, [])\r\n\r\n    return(\r\n      <div>\r\n        <div>\r\n           <ChatList text={text} username={username.username} fetchChat={fetchChat}/>\r\n           <SendChat fetchChat={fetchChat} username={username.username}/>\r\n        </div>\r\n        <LinkToHome/>\r\n        <LinkToProfile/>\r\n        <LinkToRanking/>\r\n        <LinkToLogin/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Chat","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Ranking/Ranking.tsx",["167"],[],"import React, {useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinkToChat from \"../Link/LinkToChat\";\r\nimport LinkToHome from \"../Link/LinkToHome\";\r\nimport LinkToLogin from \"../Link/LinkToLogin\";\r\nimport LinkToProfile from \"../Link/LinkToProfile\";\r\nimport Receiver from \"./componentsForRanking/Receiver\"\r\nimport Server from \"./componentsForRanking/Server\"\r\nimport \"../../css/Ranking.css\"\r\n\r\nconst Ranking : React.FC = () => {\r\n\r\n    //prevent from URL\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      if (!history.location.state) history.replace('/login')\r\n    }, [])\r\n    \r\n    return(\r\n        <div>\r\n        <div className=\"ranking-divAll\">\r\n            <div className=\"ranking-divTitle\">\r\n                ランキング一覧\r\n            </div>\r\n            <div>\r\n               <Receiver/>    \r\n               <Server/>       \r\n            </div>\r\n        </div>\r\n            <LinkToHome/>\r\n            <LinkToProfile/>\r\n            <LinkToChat/>\r\n            <LinkToLogin/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ranking","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForProfile/FetchContribute.tsx",["168"],[],"import { useHistory } from \"react-router-dom\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport LinkToChat from \"../../Link/LinkToChat\";\r\nimport LinkToHome from \"../../Link/LinkToHome\"\r\nimport LinkToLogin from \"../../Link/LinkToLogin\";\r\nimport LinkToRanking from \"../../Link/LinkToRanking\";\r\n\r\ntype Props = {\r\n  urlParams: {\r\n  username: string;\r\n  },\r\n  query:{v:number}\r\n}\r\n\r\ntype Points = {\r\n    contributeSent : number,\r\n    contributeReceived : number\r\n  }\r\n\r\nconst FetchContribute : React.FC<Props> = ({urlParams, query}) => {\r\n    //contribute定義\r\n    const [contribute, setContribute] = useState<Points>({contributeSent:0, contributeReceived:0})\r\n\r\n    //url作成\r\n    const fetchUrlPoint :string = \"http://localhost:8000/individual/status?username=\" + urlParams.username\r\n\r\n    //GET points\r\n    const fetchContribute = async () => {\r\n       try {\r\n           const res = await fetch(fetchUrlPoint);\r\n           if (!res.ok) {\r\n             throw Error(`Failed to fetch contribute: ${res.status}`);\r\n           }\r\n\r\n           const contributePoints = await res.json();\r\n           setContribute(contributePoints);\r\n           console.log(contribute)\r\n         } catch (err) {\r\n           console.error(err);\r\n          }\r\n     };\r\n  \r\n\r\n     //一度だけ取得\r\n    useEffect (() => {\r\n       fetchContribute()\r\n    },[])\r\n\r\n    const history = useHistory();\r\n    const onClick = (e:React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n      history.goBack();\r\n    }\r\n\r\n    if(query.v === 1){\r\n      return(\r\n        <div className=\"profile-divAll\">\r\n          <div className=\"profile-divTitle\">\r\n              ポイント状況\r\n          </div>\r\n          <ul className=\"profile-ulProfile\">\r\n            <div className=\"profile-divComponent\">\r\n              送ったポイント:{contribute.contributeSent}pt\r\n            </div>\r\n            <div className=\"profile-divComponent\">\r\n              受け取ったポイント:{contribute.contributeReceived}pt\r\n            </div>\r\n          </ul>\r\n          <div>\r\n            <button \r\n            className=\"profile-buttonBack\"\r\n            onClick={(e) => onClick(e)}>戻る</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }else if(query.v === 0){\r\n      return(\r\n        <div>\r\n          <div className=\"profile-divAll\">\r\n            <div className=\"profile-divTitle\">\r\n                ポイント状況\r\n            </div>\r\n            <ul className=\"profile-ulProfile\">\r\n              <div className=\"profile-divComponent\">\r\n                送ったポイント:{contribute.contributeSent}pt\r\n              </div>\r\n              <div className=\"profile-divComponent\">\r\n                受け取ったポイント:{contribute.contributeReceived}pt\r\n              </div>\r\n            </ul>\r\n          </div>\r\n          <LinkToHome/>\r\n          <LinkToChat/>\r\n          <LinkToRanking/>\r\n          <LinkToLogin/>\r\n        </div>\r\n      )\r\n    }else{\r\n      return(\r\n        <div></div>\r\n      )\r\n    }\r\n    \r\n}\r\n\r\nexport default FetchContribute","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/Status.tsx",["169"],[],"import \"../../../css/Home.css\";\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\ntype Points = {\r\n    contributeSent : number,\r\n    contributeReceived : number\r\n}\r\n\r\ntype Props = {\r\n    urlParams: {\r\n        username: string;\r\n    }\r\n}\r\n\r\nconst Status : React.FC<Props> = ({urlParams}) => {\r\n\r\n    //contribute定義\r\n    const [contribute, setContribute] = useState<Points>({contributeSent: 0, contributeReceived: 0})\r\n\r\n    //url作成\r\n    const fetchUrl :string = \"http://localhost:8000/individual/status?username=\" + urlParams.username\r\n\r\n    //GET status\r\n    const fetchContribute = async () => {\r\n        try {\r\n          const res = await fetch(fetchUrl);\r\n          if (!res.ok) {\r\n            throw Error(`Failed to fetch users: ${res.status}`);\r\n          }\r\n    \r\n          const contributeStatus = await res.json();\r\n          setContribute(contributeStatus);\r\n          console.log(contribute)\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n       };\r\n\r\n    //一度だけ取得\r\n    useEffect (() => {\r\n      fetchContribute()\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"home-statusDiv\">\r\n            <div>あなたの送った合計ポイントは {contribute.contributeSent} ptです。</div>\r\n            <div>あなたの受け取った合計ポイントは {contribute.contributeReceived} ptです。</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Status","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/ReceivedLog.tsx",["170"],[],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype Receive = {\r\n    id: string,\r\n    serverName:string,\r\n    sendPoint:number,\r\n    message:string\r\n}\r\n\r\ntype Props = {\r\n  urlParams: {\r\n    username: string;\r\n}\r\n}\r\n\r\nconst ReceivedLog : React.FC<Props> = ({urlParams}) => {\r\n\r\n    //receive定義\r\n    const [receive, setReceive] = useState<Receive[]>([])\r\n\r\n    const fetchUrl = \"http://localhost:8000/individual/log/received?username=\" + urlParams.username\r\n\r\n    //Get received\r\n    const fetchLogReceived = async() => {\r\n        try {\r\n          const res = await fetch(fetchUrl);\r\n          if (!res.ok) {\r\n            throw Error(`Failed to fetch users: ${res.status}`);\r\n          }\r\n    \r\n          const ReceiveLog = await res.json();\r\n          setReceive(ReceiveLog);\r\n          console.log(receive)\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    //一度だけ取得\r\n    useEffect (() => {\r\n      fetchLogReceived()\r\n    },[])\r\n\r\n    const history = useHistory(); \r\n    \r\n    //onClick\r\n    const onClick = (e:React.MouseEvent<HTMLSpanElement>, username:string) => {\r\n      e.preventDefault();\r\n      history.push({\r\n        pathname:\"/profile/\" + username,\r\n        state:{v:1}\r\n    })\r\n    }\r\n\r\n    if (receive.length === 0) {\r\n      return(\r\n      <div className=\"home-logDiv-all\">\r\n            <div className=\"home-logDiv-title\">\r\n                受信記録\r\n            </div>\r\n            <div className=\"home-logDiv-list\">\r\n                 <div>\r\n                    受信記録はありません         \r\n                 </div>\r\n            </div>\r\n        </div>\r\n    )}else{\r\n    return(\r\n        <div className=\"home-logDiv-all\">\r\n            <div className=\"home-logDiv-title\">\r\n                受信記録\r\n            </div>\r\n            <div className=\"home-logDiv-list\">\r\n                {receive.map(log => {\r\n                    return(\r\n                        <ul \r\n                        className=\"home-logUl\" \r\n                        key={log.id}>\r\n                          <div className=\"home-logDiv-combine\">\r\n                            <div className=\"home-logDiv-componentPass\">\r\n                              <span onClick={(e) => onClick(e, log.serverName)}>{log.serverName}</span> さんから {log.sendPoint} pt受け取りました。\r\n                            </div>\r\n                           <div className=\"home-logDiv-componentMessage\">{log.message}</div>\r\n                          </div>      \r\n                        </ul>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default ReceivedLog","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/SendContribute.tsx",["171","172","173"],[],"import userEvent from \"@testing-library/user-event\";\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\ntype Props = {\r\n  urlParams: {\r\n    username: string;\r\n}\r\n}\r\nconst SendContribute : React.FC<Props> = ({urlParams}) => {\r\n\r\n  //value\r\n    const [to, setTo] = useState(\"\")\r\n    const [point, setPoint] = useState(0)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    //onChange関数\r\n    const onChangePoint = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n      setPoint(Number(e.target.value))\r\n    }\r\n    const onChangeText = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n      setMessage(e.target.value)\r\n    }\r\n    const onChangeTo = (e:React.ChangeEvent<HTMLSelectElement>) => {\r\n      setTo(e.target.value)\r\n    }\r\n\r\n    //onClick関数\r\n    const onClickForSend = async(e:React.MouseEvent<HTMLButtonElement>) => {     \r\n      e.preventDefault();\r\n\r\n      if (!to) {\r\n        alert(\"送る相手を選択してください\");\r\n        return;\r\n      }\r\n      //@ts-ignore\r\n      if ([...message].length > 200) {\r\n        alert(\"メッセージは２００文字未満にしてください\");\r\n        return;\r\n      }\r\n      if (point == 0) {\r\n        alert(\"ポイントを入力してください\");\r\n        return;\r\n      }\r\n      try{\r\n           const result = await fetch(\"http://localhost:8000/send/contribute?username=\" + urlParams.username, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              receiverName: to,\r\n              sendPoint: point,\r\n              message: message             \r\n             }),\r\n           });\r\n          if (result.status === 406) {\r\n            alert(\"存在しないユーザー名です\")\r\n            setTo(\"\")\r\n            return;\r\n          }\r\n          if (!result.ok) {\r\n            throw Error(`Failed to send chat`);\r\n          }\r\n          window.location.reload();\r\n          } catch (err) {     \r\n                   console.error(err);\r\n       }\r\n    }\r\n\r\n    //other users取得\r\n    const [users, setUsers] = useState<string[]>([])\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:8000/individual/others?username=\" + urlParams.username);\r\n        if (!res.ok) {\r\n          throw Error(`Failed to fetch users: ${res.status}`);\r\n        }\r\n  \r\n        const others = await res.json();\r\n        setUsers(others);\r\n        console.log(others)\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n  //一度だけ取得\r\n  useEffect (() => {\r\n    fetchUsers()\r\n  },[])\r\n\r\n    //返却\r\n    return (\r\n        <div className=\"home-sendDiv\">\r\n          <form id = \"form\" className=\"home-sendForm\">\r\n            <div className=\"home-sendFormDiv\">\r\n              <label className=\"home-sendLabel\">送信相手を選んでください</label>\r\n              <select\r\n                onChange={onChangeTo}\r\n                className=\"home-sendSelect\">\r\n                  <option defaultValue={\"\"}></option>\r\n                  {users.map(user => {\r\n                    return(\r\n                      <option value={user}>{user}</option>\r\n                    )\r\n                  }\r\n                  )}\r\n               </select>\r\n            </div>\r\n            <div className=\"home-sendFormDiv\">\r\n              <label className=\"home-sendLabel\">送るポイントを入力してください</label>\r\n              <input\r\n              className=\"home-sendInput\"\r\n              type=\"number\"\r\n              value={point}\r\n              onChange={(e) => onChangePoint(e)}/>\r\n            </div>  \r\n            <div className=\"home-sendFromDiv\">\r\n              <label className=\"home-sendLabel\">メッセージを入力してください</label>\r\n              <input\r\n              className=\"home-sendInput\"\r\n              placeholder=\"メッセージを入力してください\"\r\n              type=\"text\"\r\n              value={message}\r\n              onChange={(e) => onChangeText(e)}\r\n              />\r\n            </div>\r\n            <div className=\"home-sendButtonDiv\">\r\n              <button\r\n                className=\"home-sendButton\"\r\n                onClick={(e) => onClickForSend(e)}>送信</button>\r\n            </div>     \r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendContribute","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForProfile/FetchProfile.tsx",["174"],[],"import React, {useState, useEffect} from \"react\";\r\nimport EditProfile from \"./EditProfile\"\r\n\r\ntype Props = {\r\n  urlParams: {\r\n    username: string;\r\n  },\r\n  query:{v:number}\r\n}\r\n\r\ntype Profiling = {\r\n    username : string,\r\n    nickname : string,\r\n    introduction : string\r\n}\r\n\r\nconst FetchProfile : React.FC<Props> = ({urlParams, query}) => {\r\n\r\n    const [status, setStatus] = useState(0)\r\n\r\n    const onClick = (e:React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n      setStatus(1);\r\n      fetchProfile();\r\n    }\r\n\r\n    //contribute定義\r\n    const [profile, setProfile] = useState<Profiling>({username:\"\", nickname:\"\", introduction:\"\"})\r\n\r\n    //url作成\r\n    const fetchUrlProfile :string = \"http://localhost:8000/individual/profile?username=\" + urlParams.username\r\n    \r\n    //GET profile\r\n    const fetchProfile = async () => {\r\n        try {\r\n          const res = await fetch(fetchUrlProfile);\r\n          if (!res.ok) {\r\n            throw Error(`Failed to fetch profile: ${res.status}`);\r\n          }\r\n    \r\n          const profileStatus = await res.json();\r\n          setProfile(profileStatus);\r\n          console.log(profile)\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    //一度だけ取得\r\n    useEffect (() => {\r\n      fetchProfile()\r\n    },[])\r\n\r\n      //for others\r\n      if(query.v === 1){\r\n        return(\r\n          <div className=\"profile-divAll\">\r\n            <div className=\"profile-divTitle\">\r\n                プロフィール\r\n            </div>\r\n            <ul className=\"profile-ulProfile\">\r\n              <div className=\"profile-divComponent\">ユーザー名: {profile.username}</div>\r\n              <div className=\"profile-divComponent\">ニックネーム: {profile.nickname}</div>\r\n              <div className=\"profile-divComponent\">自己紹介: {profile.introduction}</div>\r\n            </ul>    \r\n          </div>\r\n        )}\r\n      //edit\r\n      else if(status===1){\r\n        return(\r\n          <EditProfile profile={profile}/>\r\n        )\r\n      } \r\n      //default\r\n      else if(query.v === 0){\r\n        return(\r\n          <div className=\"profile-divAll\">\r\n            <div className=\"profile-divTitle\">\r\n                プロフィール\r\n            </div>\r\n            <ul className=\"profile-ulProfile\">\r\n              <div className=\"profile-divComponent\">ユーザー名: {profile.username}</div>\r\n              <div className=\"profile-divComponent\">ニックネーム: {profile.nickname}</div>\r\n              <div className=\"profile-divComponent\">自己紹介: {profile.introduction}</div>\r\n            </ul>\r\n            <div className=\"profile-divButton\">\r\n              <button \r\n              className=\"profile-button\"\r\n              onClick={(e) => onClick(e)}>編集</button>\r\n            </div>    \r\n          </div>\r\n        )}else{\r\n          return(\r\n            <div></div>\r\n          )\r\n        }\r\n}\r\n\r\nexport default FetchProfile","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/SentLog.tsx",["175","176"],[],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DeleteLog from \"./DeleteLog\"\r\n\r\ntype Sent = {\r\n    id: string,\r\n    receiverName:string,\r\n    sendPoint:number,\r\n    message:string\r\n}\r\n\r\ntype Props = {\r\n    urlParams: {\r\n        username: string;\r\n    }\r\n}\r\n\r\nconst ReceivedLog :React.FC<Props> = ({urlParams}) => {\r\n\r\n    //send定義\r\n    const [send, setSend] = useState<Sent[]>([])\r\n\r\n    const fetchUrl = \"http://localhost:8000/individual/log/sent?username=\" + urlParams.username\r\n\r\n    //Get sent\r\n    const fetchLogSent = async () => {\r\n        try {\r\n          const res = await fetch(fetchUrl);\r\n          if (!res.ok) {\r\n            throw Error(`Failed to fetch users: ${res.status}`);\r\n          }\r\n    \r\n          const SentLog = await res.json();\r\n          setSend(SentLog);\r\n          console.log(send)\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    //一度だけ取得\r\n    useEffect (() => {\r\n      fetchLogSent()\r\n    },[])\r\n\r\n    const history = useHistory();\r\n\r\n    //onclick\r\n    const onClick = (e:React.MouseEvent<HTMLSpanElement>, username:string) => {\r\n      e.preventDefault();\r\n      history.push({\r\n        pathname:\"/profile/\" + username,\r\n        state:{v:1}\r\n    })\r\n    }\r\n\r\n    if (send.length == 0) {\r\n      return(\r\n      <div className=\"home-logDiv-all\">\r\n            <div className=\"home-logDiv-title\">\r\n                送信記録\r\n            </div>\r\n            <div className=\"home-logDiv-list\">\r\n                 <div>\r\n                    送信記録はありません         \r\n                 </div>\r\n            </div>\r\n        </div>\r\n    )}else{\r\n    return(\r\n        <div className=\"home-logDiv-all\">\r\n            <div className=\"home-logDiv-title\">\r\n                送信記録\r\n            </div>\r\n            <div className=\"home-logDiv-list\">\r\n                {send.map(log => {\r\n                    return(\r\n                        <ul\r\n                        className=\"home-logUl\" \r\n                        key={log.id}>\r\n                            <div className=\"home-logDiv-inUl\">\r\n                               <div className=\"home-logDiv-combine\">\r\n                                  <div className=\"home-logDiv-componentPass\">  \r\n                                    <span onClick={(e) => onClick(e, log.receiverName)}>{log.receiverName}</span> へ {log.sendPoint} pt送りました。\r\n                                  </div>\r\n                                  <div className=\"home-logDiv-componentMessage\">{log.message}</div>  \r\n                               </div> \r\n                               <div className=\"home-logDiv-ForButton\">\r\n                                 <DeleteLog id={log.id}/>\r\n                               </div>                \r\n                            </div>\r\n                            \r\n\r\n                           \r\n                           \r\n                        </ul>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default ReceivedLog\r\n","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToChat.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToProfile.tsx",["177"],[],"import { url } from \"inspector\";\r\nimport React from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst LinkToProfile = () => {\r\n    \r\n    const history = useHistory();\r\n    //query parameter取得\r\n    const urlParams = useParams<{username:string}>()\r\n\r\n    //go to profile\r\n    const onClickForProfile = (e:React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        history.push({\r\n            pathname:\"/profile/\" + urlParams.username,\r\n            state:{v:0}\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={(e) => {onClickForProfile(e)}}>プロフィール</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinkToProfile","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToLogin.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToHome.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Link/LinkToRanking.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/SendChat.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/ChatList.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Ranking/componentsForRanking/Receiver.tsx",["178"],[],"import React, {useState, useEffect} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\ntype Ranking = {\r\n    username :string ,\r\n    contributeReceived :number\r\n}\r\n\r\nconst Receiver : React.FC = () => {\r\n\r\n    const fetchUrl = \"http://localhost:8000/global/ranking/receiver\"\r\n\r\n    const [receiverRanking,setReceiverRanking] = useState<Ranking[]>([])\r\n\r\n    //receiver ranking 取得\r\n    const fetchReceiverRanking = async() => {\r\n        try {\r\n            const res = await fetch(fetchUrl);\r\n            if (!res.ok) {\r\n              throw Error(`Failed to fetch users: ${res.status}`);\r\n            }\r\n      \r\n            const Receive = await res.json();\r\n            setReceiverRanking(Receive);\r\n            console.log(receiverRanking)\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        };\r\n  \r\n      //一度だけ取得\r\n      useEffect (() => {\r\n        fetchReceiverRanking()\r\n      },[])\r\n\r\n      const history = useHistory();\r\n\r\n      //onclick\r\n      const onClick = (e:React.MouseEvent<HTMLDivElement>, username:string) => {\r\n        e.preventDefault();\r\n        history.push({\r\n          pathname:\"/profile/\" + username,\r\n          state:{v:1}\r\n      })\r\n      }\r\n\r\n    return(\r\n        <div className=\"ranking-divAll\">\r\n            <div className=\"ranking-divTitle\">受信ポイント</div>\r\n            <div className=\"ranking-divList\">\r\n            {receiverRanking.map(rank => {\r\n                return(\r\n                    <div \r\n                    className=\"ranking-divComponent\"\r\n                    key={rank.username}> \r\n                      <div \r\n                      onClick={(e) => onClick(e, rank.username)}\r\n                      className=\"ranking-divUsername\">\r\n                        {rank.username}\r\n                      </div>\r\n                      <div className=\"ranking-divPoint\">\r\n                        {rank.contributeReceived} pt\r\n                      </div>  \r\n                    </div>\r\n                )\r\n            })}\r\n            </div>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receiver","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Ranking/componentsForRanking/Server.tsx",["179"],[],"import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype Ranking = {\r\n    username :string ,\r\n    contributeSent :number\r\n}\r\n\r\nconst Server : React.FC = () => {\r\n\r\n    const fetchUrl = \"http://localhost:8000/global/ranking/server\"\r\n\r\n    const [serverRanking,setServerRanking] = useState<Ranking[]>([])\r\n\r\n    const fetchServerRanking = async() => {\r\n        try {\r\n            const res = await fetch(fetchUrl);\r\n            if (!res.ok) {\r\n              throw Error(`Failed to fetch users: ${res.status}`);\r\n            }\r\n      \r\n            const send = await res.json();\r\n            setServerRanking(send);\r\n            console.log(serverRanking)\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        };\r\n  \r\n      //一度だけ取得\r\n      useEffect (() => {\r\n        fetchServerRanking()\r\n      },[])\r\n\r\n      const history = useHistory();\r\n\r\n      //onclick\r\n      const onClick = (e:React.MouseEvent<HTMLDivElement>, username:string) => {\r\n        e.preventDefault();\r\n        history.push({\r\n          pathname:\"/profile/\" + username,\r\n          state:{v:1}\r\n      })\r\n      }\r\n    \r\n\r\n    return(\r\n      <div className=\"ranking-divAll\">\r\n        <div className=\"ranking-divTitle\">送信ポイント</div>\r\n        <div className=\"ranking-divList\">\r\n         {serverRanking.map(rank => {\r\n          return(\r\n              <div \r\n              className=\"ranking-divComponent\"\r\n              key={rank.username}> \r\n                <div \r\n                onClick={(e) => onClick(e, rank.username)}\r\n                className=\"ranking-divUsername\">\r\n                  {rank.username}\r\n                </div>\r\n                <div className=\"ranking-divPoint\">\r\n                  {rank.contributeSent} pt\r\n                </div>  \r\n              </div>\r\n          )\r\n      })}\r\n      </div>           \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Server","/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForProfile/EditProfile.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Individual/componentsForHome/DeleteLog.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/DeleteChat.tsx",[],[],"/home/kosei/hackathon/hackathon/allcode/my-app-ts/src/components/Chat/componentsForChat/EditChat.tsx",["180"],[],"import React, {useState} from \"react\"\r\nimport ts from \"typescript\"\r\n\r\ntype chatLog = {\r\n  id: string,\r\n  username: string,\r\n  textMessage: string\r\n}\r\n\r\ntype Props = {\r\n    log: chatLog\r\n}\r\nconst EditChat : React.FC<Props> = ({log}) => {\r\n\r\n    const [message, setMessage] = useState(log.textMessage)\r\n\r\n    const onChangeText = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n    const onClickForEdit = async(e:React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        if (!message) {\r\n          alert(\"メッセージを入力してください\");\r\n          return;\r\n        }\r\n        //@ts-ignore\r\n        if ([...message].length > 200) {\r\n          alert(\"メッセージは２００文字未満にしてください\");\r\n          return;\r\n        }\r\n        try{\r\n            const result = await fetch(\"http://localhost:8000/edit/chat\" ,{\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                id: log.id,\r\n                textMessage: message\r\n              }),\r\n            });\r\n            if (!result.ok) {\r\n              throw Error(`Failed to send chat`);\r\n            }\r\n\r\n            setMessage(\"\")\r\n            window.location.reload();\r\n  \r\n          } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    return(\r\n      <div  \r\n        className = \"chat-divComponent\"\r\n        key={log.id}>\r\n        <div className=\"chat-divCombine\">\r\n          <div className=\"chat-divUsername\">{log.username}</div> \r\n          <div className=\"chat-divTextMessage\">\r\n            <input\r\n            className=\"chat-inputEdit\"\r\n            type = \"text\"\r\n            value = {message}\r\n            onChange = {(e) => onChangeText(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-divForButton\">\r\n              <button \r\n              className=\"chat-buttonEdit\"\r\n              onClick={(e) => onClickForEdit(e)}>編集完了</button>\r\n        </div>    \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default EditChat",{"ruleId":"181","severity":1,"message":"182","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":21},{"ruleId":"181","severity":1,"message":"185","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":22,"column":8,"nodeType":"188","endLine":22,"endColumn":10,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"190","line":46,"column":7,"nodeType":"188","endLine":46,"endColumn":9,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"187","line":52,"column":8,"nodeType":"188","endLine":52,"endColumn":10,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"187","line":17,"column":8,"nodeType":"188","endLine":17,"endColumn":10,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"194","line":47,"column":7,"nodeType":"188","endLine":47,"endColumn":9,"suggestions":"195"},{"ruleId":"186","severity":1,"message":"194","line":42,"column":7,"nodeType":"188","endLine":42,"endColumn":9,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"197","line":43,"column":7,"nodeType":"188","endLine":43,"endColumn":9,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":17},{"ruleId":"200","severity":1,"message":"201","line":40,"column":17,"nodeType":"202","messageId":"203","endLine":40,"endColumn":19},{"ruleId":"186","severity":1,"message":"204","line":88,"column":5,"nodeType":"188","endLine":88,"endColumn":7,"suggestions":"205"},{"ruleId":"186","severity":1,"message":"206","line":52,"column":7,"nodeType":"188","endLine":52,"endColumn":9,"suggestions":"207"},{"ruleId":"186","severity":1,"message":"208","line":44,"column":7,"nodeType":"188","endLine":44,"endColumn":9,"suggestions":"209"},{"ruleId":"200","severity":1,"message":"201","line":57,"column":21,"nodeType":"202","messageId":"203","endLine":57,"endColumn":23},{"ruleId":"181","severity":1,"message":"210","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"186","severity":1,"message":"211","line":34,"column":9,"nodeType":"188","endLine":34,"endColumn":11,"suggestions":"212"},{"ruleId":"186","severity":1,"message":"213","line":33,"column":9,"nodeType":"188","endLine":33,"endColumn":11,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"215","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":10},"@typescript-eslint/no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["216"],"React Hook useEffect has a missing dependency: 'fetchChat'. Either include it or remove the dependency array.",["217"],["218"],["219"],"React Hook useEffect has a missing dependency: 'fetchContribute'. Either include it or remove the dependency array.",["220"],["221"],"React Hook useEffect has a missing dependency: 'fetchLogReceived'. Either include it or remove the dependency array.",["222"],"'userEvent' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'fetchLogSent'. Either include it or remove the dependency array.",["225"],"'url' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchReceiverRanking'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'fetchServerRanking'. Either include it or remove the dependency array.",["227"],"'ts' is defined but never used.",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"228","fix":"232"},{"desc":"228","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [history]",{"range":"249","text":"250"},"Update the dependencies array to be: [fetchChat]",{"range":"251","text":"252"},{"range":"253","text":"250"},{"range":"254","text":"250"},"Update the dependencies array to be: [fetchContribute]",{"range":"255","text":"256"},{"range":"257","text":"256"},"Update the dependencies array to be: [fetchLogReceived]",{"range":"258","text":"259"},"Update the dependencies array to be: [fetchUsers]",{"range":"260","text":"261"},"Update the dependencies array to be: [fetchProfile]",{"range":"262","text":"263"},"Update the dependencies array to be: [fetchLogSent]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetchReceiverRanking]",{"range":"266","text":"267"},"Update the dependencies array to be: [fetchServerRanking]",{"range":"268","text":"269"},[819,821],"[history]",[1263,1265],"[fetchChat]",[1421,1423],[612,614],[1324,1326],"[fetchContribute]",[1056,1058],[1011,1013],"[fetchLogReceived]",[2396,2398],"[fetchUsers]",[1299,1301],"[fetchProfile]",[1017,1019],"[fetchLogSent]",[921,923],"[fetchReceiverRanking]",[872,874],"[fetchServerRanking]"]